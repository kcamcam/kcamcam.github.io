<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 232: Mathematics for Computer Science</h3>
    <p class="uk-text-justify">
      Sets. Propositional logic and predicate calculus. Functions and relations. Elements of number theory. Proof techniques: direct proof, indirect proof, proof by contradiction, proof by induction.
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 248: Object‑Oriented Programming I</h3>
    <p class="uk-text-justify">
      Basic data types, variables, expressions, assignments, control flow. Classes, objects, methods. Information hiding, public vs. private visibility, data abstraction and encapsulation. References. Arrays.
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 249: Object‑Oriented Programming II</h3>
    <p class="uk-text-justify">
      Design of classes. Inheritance. Polymorphism. Static and dynamic binding. Abstract classes. Exception handling. File I/O. Recursion. Interfaces and inner classes. Graphical user interfaces. Generics. Collections and iterators.
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 335: Introduction to Theoretical Computer Science</h3>
    <p class="uk-text-justify">
      Finite state automata and regular languages. Push-down automata and context-free languages. Pumping lemmas. Applications to parsing. Turing machines. Undecidability and decidability. 
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 345: Databases</h3>
    <p class="uk-text-justify">
      Introduction to database management systems. Conceptual database design: the entity-relationship model. The relational data model and relational algebra: functional dependencies and normalization. The SQL language and its application in defining, querying, and updating databases; integrity constraints; triggers. Developing database applications. Other data models: Datalog. Object-oriented data model and ODL. Semi-structured data.
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 346: Operating Systems</h3>
    <p class="uk-text-justify">
      Fundamentals of operating system functionalities, design and implementation. Multiprogramming: processes and threads, context switching, queuing models and scheduling. Interprocess communication and synchronization. Principles of concurrency. Synchronization primitives. Deadlock detection and recovery, prevention and avoidance schemes. Memory management. Device management. File systems. Protection models and schemes.
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 348: Principles of Programming Languages</h3>
    <p class="uk-text-justify">
      Survey of programming paradigms: Imperative, functional, and logic programming. Issues in the design and implementation of programming languages. Declaration models: binding, visibility, and scope. Type systems, including static and dynamic typing. Parameter passing mechanisms. Hybrid language design.
    </p>
  </div>
</div>

<div class="cards uk-card uk-card-large uk-card-secondary uk-box-shadow-medium uk-margin">
  <div class="uk-card-body">
    <h3 class="uk-card-title uk-margin-remove-bottom">COMP 352: Data Structures and Algorithms</h3>
    <p class="uk-text-justify">
      Abstract data types: stacks and queues, trees, priority queues, dictionaries. Data structures: arrays, linked lists, heaps, hash tables, search trees. Design and analysis of algorithms: asymptotic notation, recursive algorithms, searching and sorting, tree traversal, graph algorithms.
    </p>
  </div>
</div>